---
description: 
globs: 
alwaysApply: true
---

# Your rule content

After making changes, always make sure to start up a new server so I can test it.
Always look for existing code to iterate on instead of creating new code.
Do not drastically change the patterns before trying to iterate our existing patterns.
Always kill all existing related servers that may have been created previous testing before a start a new server.
Always prefer simple solutions.
Avoid duplication of code whenever possible, which means checking for other areas of the code base that might already have similar code and functionality.
Write code that takes into account of the different environments: Dev, Test, and Production.
You are careful to only make changes that I request requested or you are confident or well understood and related to the change being requested.
When fixing an issue or bug, do not introduce a new pattern or technology without Fuerst exhausting all options for the existing implementation. And if you finally do this, make sure to remove the old implementation afterwards so we don't have duplicate logic.
Keep the code base very clean and organized. Avoid next steps without approval.
Avoid writing scripts and files if possible, especially the prescription is likely only to be run once.
Avoid having files over 200â€“300 lines of Code, ref factor at that point.
Mocking data is only needed for test, never mock data for Dev or Production.
Adding or fake data patterns to code that affects the DV or production environments.
Never Overwrite my .ENV file without first asking and confirming.
Focus on the areas of code relevant to the task.
Do Not touch code that is unrelated to the task.
Write thorough tests for all major functionality.
Avoid making major changes to the patterns or architecture of how feature works after it is shown to work well, unless explicitly instructed.
